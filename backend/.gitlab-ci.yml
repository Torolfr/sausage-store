variables:
  VERSION: 1.0.$CI_PIPELINE_ID
  MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository

stages:
  - build
  - notify
  - test
  - release

include:
  - template: Security/SAST.gitlab-ci.yml

cache:
  paths:
    - $CI_PROJECT_DIR/.m2/repository

build-backend-code-job:
  stage: build
  only:
    changes:
      - backend/*/**
  script:
    - cd backend
    - > 
      mvn package -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dversion.application=$VERSION
  artifacts:
    paths:
      - backend/target/sausage-store-$VERSION.jar

spotbugs-sast:
  stage: test
  needs:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository

sonarqube-backend-sast:
  stage: test
  needs:
    - build-backend-code-job
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACK
      -Dsonar.host.url=$SONARQUBE_URL
      -Dsonar.login=$SONAR_LOGIN_BACK
  allow_failure: true

telegram-notification-backend:
  stage: notify
  needs:
    - build-backend-code-job
  variables:
    MESSAGE: "Sergey Danilov built apps apps backend. $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=build-backend-code-job"
  only:
    changes:
      - backend/*/**
    variables:
      - "$CI_COMMIT_MESSAGE =~ /send notification/"
  script:
    - echo $MESSAGE
    - >
      curl -X POST -H "Content-type: application/json"
      --data "{\"chat_id\": \"$TELEGRAM_TO\", \"text\": \"$MESSAGE\"}"
      https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/**/*
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - >
      mvn package -DskipTests
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -s settings.xml -Dversion.application=$VERSION
