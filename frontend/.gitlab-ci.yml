variables:
  VERSION: 1.0.$CI_PIPELINE_ID

stages:
  - build
  - notify
  - test
  - release

cache:
  paths:
    - frontend/dist/frontend

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/*/**
  script:
    - cd frontend
    - npm install
    - npm run build


# sonarqube-frontend-sast:
#   stage: test
#   needs:
#     - build-frontend-code-job
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   script:
#     - cd frontend
#     - >
#       sonar-scanner
#       -Dsonar.qualitygate.wait=true
#       -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT
#       -Dsonar.sources=.
#       -Dsonar.host.url=$SONARQUBE_URL
#       -Dsonar.login=$SONAR_LOGIN_FRONT
#   allow_failure: true

telegram-notification-frontend:
  stage: notify
  needs:
    - build-frontend-code-job
  variables:
    MESSAGE: "Sergey Danilov built apps frontend. $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=build-frontend-code-job"
  only:
    changes:
      - frontend/*/**
    variables:
      - "$CI_COMMIT_MESSAGE =~ /send notification/"
  script:
    - >
      curl -X POST -H "Content-type: application/json"
      --data "{\"chat_id\": \"$TELEGRAM_TO\", \"text\": \"$MESSAGE\"}"
      https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage

upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    # - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
      curl -v -u "$NEXUS_REPO_USER:$NEXUS_REPO_PASS"
      --upload-file sausage-store-$VERSION.tar.gz
      $NEXUS_REPO_URL/$NEXUS_REPO_FRONTEND_NAME/$VERSION/sausage-store-$VERSION.tar.gz
