stages:
  - build
  - notify
  - test

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/*/**
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

sonarqube-frontend-sast:
  stage: test
  needs:
    - build-frontend-code-job
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT
      -Dsonar.sources=.
      -Dsonar.host.url=$SONARQUBE_URL
      -Dsonar.login=$SONAR_LOGIN_FRONT
  allow_failure: true

telegram-notification-frontend:
  stage: notify
  needs:
    - build-frontend-code-job
  variables:
    MESSAGE: "Sergey Danilov built apps frontend. $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_BRANCH/download?job=build-frontend-code-job"
  only:
    changes:
      - frontend/*/**
    variables:
      - "$CI_COMMIT_MESSAGE =~ /send notification/"
  script:
    - >
      curl -X POST -H "Content-type: application/json"
      --data "{\"chat_id\": \"$TELEGRAM_TO\", \"text\": \"$MESSAGE\"}"
      https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage
